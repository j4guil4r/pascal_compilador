program          : 'program' ID ';' block '.'
block            : [declaration_section] compound_statement
declaration_section : [var_section] (function_section | procedure_section)*
                    | (function_section | procedure_section)* [var_section]
var_section      : 'var' (var_declaration ';')+
var_declaration  : identifier_list ':' type
identifier_list  : ID (',' ID)*
type             : 'integer' | 'longint' | 'unsignedint' | 'void' | 'boolean'
function_section: 'function' ID [formal_parameters] ':' type ';' block ';'
procedure_section : 'procedure' ID [formal_parameters] ';' block ';'
formal_parameters : '(' var_declaration (';' var_declaration)* ')'
compound_statement : 'begin' statement_list 'end'
statement_list : statement ';' (statement ';')*
statement        : assignment
                 | if_statement
                 | while_statement
                 | for_statement
                 | procedure_call
                 | print_statement
                 | compound_statement
assignment       : ID ':=' expression
print_statement  : 'writeln' '(' [expression_list] ')'
if_statement     : 'if' expression 'then' compound_statement ['else' compound_statement]
while_statement  : 'while' expression 'do' compound_statement
for_statement    : 'for' ID ':=' expression ('to' | 'downto') expression 'do' compound_statement
function_call    : ID '(' [expression_list] ')'
procedure_call   : ID ['(' [expression_list] ')']
expression_list  : expression (',' expression)*
expression       : simple_expression [relational_operator simple_expression]
simple_expression: term (addition_operator term)*
term             : factor (multiplication_operator factor)*
factor           : ID
                 | true
                 | false
                 | '(' expression ')'
                 | 'not' factor
                 | '-' factor
                 | function_call
                 | NUM
addition_operator: '+' | '-' | 'or'
multiplication_operator : '*' | 'div' | 'mod' | 'and'
relational_operator  : '=' | '<>' | '<' | '<=' | '>' | '>='